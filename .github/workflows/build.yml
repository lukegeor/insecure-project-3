name: Full Build
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    container: oraclelinux:8
    runs-on: ubuntu-latest
    steps:
      - name: Install prereqs
        run: |
          dnf install -y \
            jq \
            git \
            tar \
            libicu \
            curl
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Set up .Net 8
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: '8.0.200'
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          architecture: 'x64'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Build, test, and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"lukegeor_insecure-project-3" /o:"lukegeor" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=Tests/results/**/coverage.opencover.xml
          dotnet msbuild -restore ./InsecureProject.sln
          dotnet test ./InsecureProject.sln --no-build -l trx --results-directory Tests/results --settings Tests/coverage.runsettings --collect:"XPlat Code Coverage" -m:1
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
#      - name: Component detection
#        uses: advanced-security/component-detection-dependency-submission-action@v0.0.2
#        with:
#          directoryExclusionList: '**/node_modules'
      - name: Submit transitive NuGet dependencies
        shell: bash
        run: |
          #cat Server/packages.lock.json | jq "{version: 0, sha: \"${{ github.sha }}\", ref: \"${{ github.ref }}\", detector: {name: \"Illumina Transitive NuGet Package Detector\", version: \"0.1\", url: \"https://git.illumina.com/DigitalSystems/ITNPD\"}, scanned: \"$(date --iso-8601=seconds)\", job: {id: \"${{ github.run_id }}\", correlator: \"${{ github.workflow }}_${{ github.action }}_Server\", html_url: \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}, manifests: {\"Server/packages.lock.json\": {name: \"Server/packages.lock.json\", file: { source_location: \"Server/packages.lock.json\" }, resolved: .dependencies[] | to_entries | map(select(.value.type == \"Transitive\")) | map({key:.key, value: {package_url: (\"pkg:nuget/\" + .key + \"@\" + .value.resolved), relationship: \"indirect\", scope: \"runtime\", dependencies: (.value.dependencies // {} | to_entries | (map(\"pkg:nuget/\" + .key + \"@\" + .value)))}}) | from_entries}}}" > server.json
          #cat Tests/ServerTests/packages.lock.json | jq "{version: 0, sha: \"${{ github.sha }}\", ref: \"${{ github.ref }}\", detector: {name: \"Illumina Transitive NuGet Package Detector\", version: \"0.1\", url: \"https://git.illumina.com/DigitalSystems/ITNPD\"}, scanned: \"$(date --iso-8601=seconds)\", job: {id: \"${{ github.run_id }}\", correlator: \"${{ github.workflow }}_${{ github.action }}_ServerTests\", html_url: \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}, manifests: {\"Tests/ServerTests/packages.lock.json\": {name: \"Tests/ServerTests/packages.lock.json\", file: { source_location: \"Tests/ServerTests/packages.lock.json\" }, resolved: .dependencies[] | to_entries | map(select(.value.type == \"Transitive\")) | map({key:.key, value: {package_url: (\"pkg:nuget/\" + .key + \"@\" + .value.resolved), relationship: \"indirect\", scope: \"development\", dependencies: (.value.dependencies // {} | to_entries | (map(\"pkg:nuget/\" + .key + \"@\" + .value)))}}) | from_entries}}}" > server-tests.json
          cat Server/packages.lock.json | jq "{version: 0, sha: \"${{ github.sha }}\", ref: \"${{ github.ref }}\", detector: {name: \"Illumina Transitive NuGet Package Detector\", version: \"0.1\", url: \"https://git.illumina.com/DigitalSystems/ITNPD\"}, scanned: \"$(date --iso-8601=seconds)\", job: {id: \"${{ github.run_id }}\", correlator: \"${{ github.workflow }}_${{ github.action }}_Server\", html_url: \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}, manifests: {\"Server/packages.lock.json\": {name: \"Server/packages.lock.json\", file: { source_location: \"Server/packages.lock.json\" }, resolved: {} }}}" > server.json
          cat Tests/ServerTests/packages.lock.json | jq "{version: 0, sha: \"${{ github.sha }}\", ref: \"${{ github.ref }}\", detector: {name: \"Illumina Transitive NuGet Package Detector\", version: \"0.1\", url: \"https://git.illumina.com/DigitalSystems/ITNPD\"}, scanned: \"$(date --iso-8601=seconds)\", job: {id: \"${{ github.run_id }}\", correlator: \"${{ github.workflow }}_${{ github.action }}_ServerTests\", html_url: \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}, manifests: {\"Tests/ServerTests/packages.lock.json\": {name: \"Tests/ServerTests/packages.lock.json\", file: { source_location: \"Tests/ServerTests/packages.lock.json\" }, resolved: {} }}}" > server-tests.json
          curl -L -i \
            --request POST \
            --header "Accept: application/vnd.github+json" \
            --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/lukegeor/insecure-project-3/dependency-graph/snapshots \
            --data "@server.json"
          curl -L -i \
            --request POST \
            --header "Accept: application/vnd.github+json" \
            --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/lukegeor/insecure-project-3/dependency-graph/snapshots \
            --data "@server-tests.json"

      - uses: advanced-security/generate-sbom-action@v1
        id: sbom
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3.1.0
        with:
          path: ${{ steps.sbom.outputs.fileName }}
          name: "SBOM"
      - name: Dependency Review
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/dependency-review-action@v3
        with:
          comment-summary-in-pr: always
          fail-on-scopes: runtime,development
          head-ref: ${{ github.sha }}
    permissions:
      pull-requests: write
      contents: write

